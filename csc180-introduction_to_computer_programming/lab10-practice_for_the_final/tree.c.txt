#include <stdio.h>
#include <stdlib.h>

typedef struct TreeNode {
    int val;
    struct TreeNode* left;
    struct TreeNode* right;
} TreeNode;

int add(TreeNode** root,int val);
int print(TreeNode* root);

int add(TreeNode** root,int val) {
    if (root == NULL) {
        return -1;
    }
    if ((*root) == NULL) {
        (*root) = (TreeNode*)malloc(sizeof(TreeNode));
        (*root) -> val = val;
        (*root) -> left = NULL;
        (*root) -> right = NULL;
    }
    else if (val < (*root) -> val) {
        return add(&((*root) -> left), val);
    }
    else if (val > (*root) -> val) {
        return add(&((*root) -> right), val);
    }
    return 0;
}

int print(TreeNode* root) {
    if (root == NULL) {
        return 0;
    }
    else {
        print(root -> left);
        printf("%d\n", root -> val);
        print(root -> right);
    }
}

int main(void) {
    int i = 0;
    TreeNode* root = NULL;

    add((&root),99);
    add((&root),103);
    add((&root),47);
    for (i = 0; i < 49; i += 2) {
        add((&root), i);
    }
    print(root);
    free(root);
}